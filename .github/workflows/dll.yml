name: Build DLLs

on:
  push:
    branches:
      - master
    tags:
      - 'v*'

jobs:
  build_windows_x64:
    name: Build plugin for Windows x64
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Build Plugin
        run: |
          cmake -G "NMake Makefiles" .
          nmake

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: rotate-x64
          path: rotate.dll

  build_windows_x86:
    name: Build plugin for Windows x86
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86

      - name: Build Plugin
        run: |
          cmake -G "NMake Makefiles" .
          nmake

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: rotate-x86
          path: rotate.dll

  release:
    name: Create release
    runs-on: ubuntu-latest

    # Only run on tag
    # I wish there was a better way to do this but it'll do for now
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build_windows_x64, build_windows_x86]

    steps:
      - name: Download binaries
        uses: actions/download-artifact@v2

      - name: Create zip archive
        run: zip -r release.zip .

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: ${{ endsWith(github.ref, 'rc') }}

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.zip
          asset_name: ${{ format('rotate_{0}.zip', github.ref) }}
          asset_content_type: application/zip